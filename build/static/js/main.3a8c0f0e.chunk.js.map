{"version":3,"sources":["components/OrderItem/index.js","components/OrderList/index.js","components/Header/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["OrderItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpenEditArea","setState","editing","handleCommentChange","e","comment","target","value","handleClickStars","stars","handleCancelComment","data","handleSubmitComment","id","_this$state","state","onSubmit","handleCheckComment","ifCommented","_this$props$data","shop","product","price","picture","react_default","a","createElement","className","src","onClick","renderEditArea","onChange","renderStars","_this2","map","item","index","light","key","bind","Component","OrderList","handleSubmit","newData","objectSpread","fetch","then","res","ok","json","_this3","OrderItem_OrderItem","Header","App","Header_Header","OrderList_OrderList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a8c0f0e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './style.css'\r\n\r\nexport default class OrderItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editing: false,\r\n      stars: props.data.stars || 0,\r\n      comment: props.data.comment || '',\r\n      ifCommented: props.data.ifCommented || false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { shop, product, price, picture, ifCommented } =\r\n      this.props.data;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"orderItem\">\r\n          <div className=\"orderItem__picContainer\">\r\n            <img className=\"orderItem__pic\" src={picture} />\r\n          </div>\r\n          <div className=\"orderItem__content\">\r\n            <div className=\"orderItem__product\">\r\n              {product}\r\n            </div>\r\n            <div className=\"orderItem__shop\">{shop}</div>\r\n            <div className=\"orderItem__detail\">\r\n              <div className=\"orderItem__price\">{price}</div>\r\n              <div>\r\n                {\r\n                  ifCommented ? (\r\n                    <button className=\"orderItem__btn orderItem__btn--grey\"\r\n                      onClick={this.handleCheckComment}>已评价</button>\r\n                  ) : (\r\n                    <button className=\"orderItem__btn orderItem__btn--red\"\r\n                      onClick={this.handleOpenEditArea}>\r\n                      评价\r\n                    </button>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.editing ? this.renderEditArea() : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleOpenEditArea = () => {\r\n    this.setState({\r\n      editing: true\r\n    })\r\n  }\r\n\r\n  renderEditArea(){\r\n    return(\r\n      <div className=\"orderItem__commentContainer\">\r\n        <textarea className=\"orderItem__comment\" \r\n          onChange={this.handleCommentChange} \r\n          value={this.state.comment} />\r\n        {this.renderStars()}\r\n        { \r\n          !this.props.data.ifCommented ? \r\n          (\r\n            <button className=\"orderItem__btn orderItem__btn--red\"\r\n              onClick={this.handleSubmitComment}>提交</button>\r\n          ): null\r\n        }\r\n        <button className=\"orderItem__btn orderItem__btn--grey\"\r\n          onClick={this.handleCancelComment}>取消</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderStars(){\r\n    const {stars} = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          [1,2,3,4,5].map((item, index) => {\r\n            const light = stars >= item ?\r\n              \"orderItem_star--light\": \"\";\r\n            return (\r\n              <span key={index} className={light}\r\n                onClick={this.handleClickStars.bind(this, item)}>★</span>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleCommentChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClickStars = (stars) => {\r\n    this.setState({\r\n      stars: stars\r\n    })\r\n  }\r\n\r\n  handleCancelComment = () => {\r\n    this.setState({\r\n      editing: false,\r\n      stars: this.props.data.stars || 0,\r\n      comment: this.props.data.comment || '',\r\n    })\r\n  }\r\n\r\n  handleSubmitComment = () => {\r\n    const { id } = this.props.data;\r\n    const { comment, stars } = this.state;\r\n    this.setState({\r\n      editing: false\r\n    })\r\n    this.props.onSubmit(id, comment, stars)\r\n  }\r\n\r\n  handleCheckComment = () => {\r\n    this.setState({\r\n      editing: true\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport OrderItem from '../OrderItem'\r\n//import imgUrl from '../../images/task1.png' //待webpack配置优化\r\n\r\nexport default class OrderList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('/mock/orders.json').then(res => {\r\n      if(res.ok){\r\n        res.json().then(data => {\r\n          this.setState({\r\n            data\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.data.map((item)=>{\r\n            return <OrderItem key={item.id} data={item}\r\n              onSubmit={this.handleSubmit} />\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleSubmit = (id, comment, stars) => {\r\n    const newData = this.state.data.map(item => {\r\n      return item.id === id ? \r\n      {\r\n        ...item, comment, stars, ifCommented: true\r\n      }: item;\r\n    })\r\n    this.setState({\r\n      data: newData\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        我的订单\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport OrderList from '../OrderList';\nimport Header from '../Header';\nimport './style.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <OrderList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}